-- This is an example site configuration for Gluon v2016.2.4
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'fflg-',

  -- Name of the community.
  site_name = 'Freifunk Lueneburg',

  -- Shorthand of the community.
  site_code = 'fflg',

  opkg = {
    openwrt = 'http://openwrt.draic.info/%n/%v/%S/packages'
  },
  
  -- Prefixes used within the mesh.
  -- prefix6 is required, prefix4 can be omitted if next_node.ip4
  -- is not set.
  prefix4 = '10.131.0.0/17',
  prefix6 = 'fd83:e002:c8a0::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'ntp1.fflg','2.openwrt.pool.ntp.org'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- List of supported wifi rates (optional)
    -- Example removes 802.11b compatibility for better performance
    supported_rates = {6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000},

    -- List of basic wifi rates (optional, required if supported_rates is set)
    -- Example removes 802.11b compatibility for better performance
    basic_rate = {6000, 9000, 18000, 36000, 54000},

    -- ESSID used for client network.
    ap = {
      ssid = 'lueneburg.freifunk.net',
      -- ssid = 'WIFI4EU',
    },
    mesh = {
      id = 'fflg-mesh',
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'lueneburg.freifunk.net (5GHz)',
    },
    mesh = {
      id = 'fflg-mesh (5GHz)',
      mcast_rate = 12000,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.131.0.1',
    ip6 = 'fd83:e002:c8a0::1',
  
    -- anycast MAC of all nodes
    mac = '16:41:95:40:f7:dc',
  },

  -- Options specific to routing protocols (optional)
  mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    },
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    enabled = true,
    configurable = true,

    mtu = 1406,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 2,

        -- List of peers.
        peers = {
          fflgGW1 = {
            key = '9bb04859c362133c99628ecdeb7f7fad0eb77bdca33ed9986b7cc2a91e2cbf2b',
            remotes = {'"gw1-tng.freifunk-lueneburg.de" port 10000'},
          },
          fflgGW2 = {
            key = '64aecca44b0a414faa01723f7c2b24500dfb876cc3e33e0b6103efa5264112fc',
            remotes = {'"gw2.freifunk-lueneburg.de" port 10001'},
          },
          fflgGW3 = {
            key = '0ad416ae2da04f337b3b3014b462250babf15f66c6d863c9c9ad7a6f5e64ab72',
            remotes = {'"gw3.freifunk-lueneburg.de" port 10000'},
          },
          fflgGW5 = {
            key = 'c779b997b156882597849109ed8278b55ef7bfc429a3314dc4a815f5753573df',
            remotes = {'"gw5.freifunk-lueneburg.de" port 10000'},
          },
        },
        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },

      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },


    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,
      -- Default upload limit (kbit/s).
      egress = 200,

      -- Default download limit (kbit/s).
      ingress = 3000,
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'experimental',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://updates.fflg/stable/'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
                    '6d9ba593bb70181db5318b38f7175f0fd92000da5950a053b18004f1fb3380ee', -- Arnim
                    '7b0da49dde0ebfd36a8b6f246619cd1dc4152d5d5ee1c7db098b618210d03589', -- Claas
                    'fe0c23b5c185ac0493e29c6c805d70965c4e78b775013a87549165cf0bc37d7d', -- Andreas
                  },
        },
      experimental = {
        name = 'experimental',
        mirrors = {'http://updates.fflg/experimental/'},
        good_signatures = 1,
        pubkeys = {
                    '6d9ba593bb70181db5318b38f7175f0fd92000da5950a053b18004f1fb3380ee', -- Arnim
                    '7b0da49dde0ebfd36a8b6f246619cd1dc4152d5d5ee1c7db098b618210d03589', -- Claas
                    'fe0c23b5c185ac0493e29c6c805d70965c4e78b775013a87549165cf0bc37d7d', -- Andreas
                  },
        },
      },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },

  -- config_mode = {
    -- Show/hide the altitude field
    -- geo_location = {
      -- show_altitude = false,
    -- },
    -- define if the contact field is obligatory (optional)
    -- owner = {
      -- obligatory = true
    -- },
  -- },
  
  ssid_changer = {
    enabled = true,
    switch_timeframe = 10,  -- only once every timeframe (in minutes) the SSID will change to OFFLINE 
                              -- set to 1440 to change once a day
                              -- set to 1 minute to change every time the router gets offline
    first = 5,                -- the first few minutes directly after reboot within which an Offline-SSID always may be activated (must be <= switch_timeframe)
    prefix = 'fflg_offline_',   -- use something short to leave space for the nodename (no '~' allowed!)
    suffix = 'nodename',      -- generate the SSID with either 'nodename', 'mac' or to use only the prefix: 'none'
     
    tq_limit_enabled = false, -- if false, the offline SSID will only be set if there is no gateway reacheable
                              -- upper and lower limit to turn the offline_ssid on and off
                              -- in-between these two values the SSID will never be changed to prevent it from toggeling every minute.
    tq_limit_max = 45,        -- upper limit, above that the online SSID will be used
    tq_limit_min = 35         -- lower limit, below that the offline SSID will be used
   },

}
